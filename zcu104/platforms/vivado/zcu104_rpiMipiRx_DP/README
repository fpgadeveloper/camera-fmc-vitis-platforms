(C) Copyright 2020 - 2022 Xilinx, Inc.
SPDX-License-Identifier: Apache-2.0

The ZCU104 nlp Vivado project is generated in this directory. 
The nlp design supports the following multimedia peripherals 
and interfaces:

1. MIPI CSI PL interface connected to the Raspberry Pi camera v2 on port CAM1 of 
the RPi Camera FMC.

2. MIPI CSI PL interface connected to the Raspberry Pi camera v2 on port CAM2 of 
the RPi Camera FMC.

3. DisplayPort via the PS DP interface and on-board DP splitter.

4. USB 3.0 PS interface for connecting a UVC compliant USB microphone.

5. SD card PS interface for storage.

The Vivado block design (scripts/config_bd.tcl) defines the above
interfaces and peripherals. It also defines the Platform Interfaces
that acclerators can connect to.

Platform Interfaces supported:
******************************
* Clocks: clock_100M, clock_300M, and clock_600M  to drive clock inputs 
          on the accelerator.
* Master AXI: M_AXI_HPM0_FPD Memory Mapped master port on 
              PS to drive the accelerator's control port.
* Slave AXI:  S_AXI_HPC1_FPD, S_AXI_HP1_FPD, S_AXI_HP2_FPD, S_AXI_HP3_FPD AXI Memory Mapped 
              slave ports driven by the accelerator's read/write data ports.
* Interrupts: pl_ps_irq0[7:0] for the accelerator to drive interrupt signals.

For more information on how to setup Platform Interfaces refer to Section
Declaring Platform (PFM) Interfaces and Properties in Xilinx Vitis Unified 
Software Platform Documentation(UG1393)


Generate Extensible XSA :
*************************
An extensible XSA is required build a Vitis Platform which is in turn used to 
integrate accelerators into the platform. 

To build the XSA, run the following make command

> make xsa

The Makefile uses scripts/main.tcl file to create a vivado project, populate the 
block design and finally build a XSA. 

The generated XSA will be located at:

> ./project/zcu104_rpiMipiRx_DP.xsa


Modify the Vivado design:
*************************

To open the Vivado project run the following command from the 
Vivado tcl console:

> open_project ./project/zcu104_rpiMipiRx_DP.xpr

The user can now modify the block design and run Vivado implementation 
and bitstream generation in the Vivado cockpit.

To write out a new extensible platform XSA file, run the following 
command from the Vivado tcl console:

> write_hw_platform -force -include_bit -file zcu104_rpiMipiRx_DP.xsa

The new XSA file can now be used replacing the existing XSA file in the Vitis
platform generation or as hardware handoff file inside the Petalinux project.

